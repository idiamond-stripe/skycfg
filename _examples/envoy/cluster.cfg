# Copyright 2020 The Skycfg Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

corev2 = proto.package("envoy.api.v2.core")
endpointv2 = proto.package("envoy.api.v2.endpoint")
v2 = proto.package("envoy.api.v2")

protobuf = proto.package("google.protobuf")

load("address.cfg", "address")


def health_checks(website):
    return corev2.HealthCheck(
        http_health_check=corev2.HealthCheck.HttpHealthCheck(
            path="/",
            host=website,
        ),
        unhealthy_threshold=1,
        healthy_threshold=1,
        timeout=protobuf.Duration(seconds=1),
        interval=protobuf.Duration(seconds=1),
        no_traffic_interval=protobuf.Duration(seconds=5),
    )


def proxy_cluster(website, cluster_name):
    cluster = v2.Cluster(
        name=cluster_name,
        dns_lookup_family=v2.Cluster.DnsLookupFamily.V4_ONLY,
        connect_timeout=protobuf.Duration(
            seconds=1,
            nanos=0,
        ),
        health_checks=[
            health_checks(website),
        ],
        type=v2.Cluster.DiscoveryType.STRICT_DNS,
        load_assignment=v2.ClusterLoadAssignment(
            cluster_name=cluster_name,
            endpoints=[
                endpointv2.LocalityLbEndpoints(
                    lb_endpoints=[
                        endpointv2.LbEndpoint(
                            endpoint=endpointv2.Endpoint(
                                hostname=website,
                                address=address(website, 80),
                            )
                        )
                    ],
                )
            ],
        ),
    )

    return cluster
